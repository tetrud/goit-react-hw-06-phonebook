{"version":3,"sources":["components/Title/Title.jsx","redux/contacts/contacts-action.js","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactsList.jsx","components/ContactFilter/ContactFilter.jsx","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["Title","title","className","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","Form","state","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","target","reset","props","onSubmit","this","onChange","type","pattern","required","disabled","Component","connect","dispatch","contactsActions","getFilterContacts","allContacts","filter","normalizedFilter","toLowerCase","includes","contacts","items","onDeleteContact","map","onClick","App","createReducer","action","find","alert","findContact","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.2c868b60.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nimport './Title.scss';\r\n\r\nconst Title = ({ title }) => <h2 className=\"Title\">{title}</h2>;\r\n\r\nTitle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Title;\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { createAction } from '@reduxjs/toolkit';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst prepare = (name, number) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name,\r\n    number,\r\n  },\r\n});\r\n\r\nconst addContact = createAction('contacts/Add', prepare);\r\nconst deleteContact = createAction('contacts/Delete');\r\nconst changeFilter = createAction('contacts/ChangeFilter');\r\n\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Title from '../Title';\r\nimport contactsActions from '../../redux/contacts/contacts-action';\r\nimport './ContactForm.scss';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    event.target.reset();\r\n    const { name, number } = this.state;\r\n\r\n    this.props.onSubmit(name, number);\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <Title title=\"Phonebook\" />\r\n\r\n        <div className=\"Phonebook\">\r\n          <form className=\"Phonebook__form\" onSubmit={this.handleSubmit}>\r\n            <label className=\"Phonebook__label\">\r\n              Name\r\n              <input\r\n                className=\"Phonebook__input\"\r\n                onChange={this.handleChange}\r\n                type=\"text\"\r\n                name=\"name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n              />\r\n            </label>\r\n\r\n            <label className=\"Phonebook__label\">\r\n              Number\r\n              <input\r\n                className=\"Phonebook__input\"\r\n                onChange={this.handleChange}\r\n                type=\"tel\"\r\n                name=\"number\"\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                required\r\n              />\r\n            </label>\r\n\r\n            <button\r\n              className=\"Phonebook__button\"\r\n              type=\"submit\"\r\n              disabled={!name && !number}\r\n            >\r\n              Add contact\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) =>\r\n    dispatch(contactsActions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n","import { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport contactsActions from '../../redux/contacts/contacts-action';\r\nimport './ContactsList.scss';\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => (\r\n  <ul className=\"ContactsList\">\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li className=\"ContactsList__item\" key={uuidv4()}>\r\n        <p className=\"ContactsList__text\">\r\n          <span className=\"ContactsList__name\">{name}</span>: {number}\r\n        </p>\r\n        <button\r\n          className=\"ContactsList__button\"\r\n          type=\"button\"\r\n          onClick={() => onDeleteContact(id)}\r\n        >\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nconst getFilterContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: getFilterContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(contactsActions.deleteContact(id)),\r\n});\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import { connect } from 'react-redux';\r\n\r\nimport contactsActions from '../../redux/contacts/contacts-action';\r\nimport './ContactFilter.scss';\r\n\r\nconst ContactFilter = ({ value, onChange }) => (\r\n  <label className=\"Filter__label\">\r\n    Find contacts by name\r\n    <input\r\n      className=\"Filter__input\"\r\n      type=\"text\"\r\n      value={value}\r\n      onChange={onChange}\r\n    />\r\n  </label>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: event => dispatch(contactsActions.changeFilter(event.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactFilter);\r\n","import Title from './components/Title';\nimport ContactForm from './components/ContactForm';\nimport ContactsList from './components/ContactsList';\nimport ContactFilter from './components/ContactFilter';\n\nconst App = () => (\n  <>\n    <ContactForm />\n    <Title title=\"Contacts\" />\n    <ContactFilter />\n    <ContactsList />\n  </>\n);\n\nexport default App;\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport action from './contacts-action';\r\n\r\nconst findContact = (contacts, payload) => {\r\n  const contact = contacts.find(\r\n    ({ name }) => name.toLowerCase() === payload.name.toLowerCase(),\r\n  );\r\n\r\n  if (!contact) {\r\n    return [...contacts, payload];\r\n  } else {\r\n    alert(`${payload.name} is already in contacts`);\r\n    return contacts;\r\n  }\r\n};\r\n\r\nconst items = createReducer([], {\r\n  [action.addContact]: (state, { payload }) => findContact(state, payload),\r\n  [action.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [action.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter });\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport contactReducer from './contacts/contacts-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactPersistConfig = {\r\n  key: 'contact',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactPersistConfig, contactReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport App from './App';\nimport store from './redux/store';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles/base.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}